name: Release kodi addon
description: Create a new version of a kodi addon

inputs:
  kodi-version:
    description: Name of kodi version
    required: true
  github-token:
    description: Token to the github project using this action
    required: true

runs:
  using: composite
  steps:
    - name: Initialize release variables
      shell: bash
      id: config
      run: |
        addon_name=`echo "${GITHUB_REPOSITORY}" | cut -d / -f 2`
        addon_version=`echo "${GITHUB_REF}" | cut -d / -f 3`
        prerelease=`echo ${addon_version} | grep -Eq -- '\+.+$' && echo true || echo false`
        echo "addon_name=${addon_name}" >> $GITHUB_OUTPUT
        echo "addon_version=${addon_version}" >> $GITHUB_OUTPUT
        echo "addon_asset=${addon_name}_${addon_version}.zip" >> $GITHUB_OUTPUT
        echo "prerelease=${prerelease}" >> $GITHUB_OUTPUT

    - name: Build addon asset
      shell: bash
      env:
        addon_name: ${{ steps.config.outputs.addon_name }}
        addon_version: ${{ steps.config.outputs.addon_version }}
        kodi_version: ${{ inputs.kodi-version }}
      run: |
        make ADDON_NAME=${addon_name} ADDON_VERSION=${addon_version} KODI_VERSION=${kodi_version}

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body_path: .build/changelog.txt
        prerelease: ${{ steps.config.outputs.prerelease }}
        draft: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: .build/${{ steps.config.outputs.addon_asset }}
        asset_name: ${{ steps.config.outputs.addon_asset }}
        asset_content_type: application/zip
